services:
    postgres:
        image: ghcr.io/neumanf/mally-postgres
        restart: unless-stopped
        healthcheck:
            test: pg_isready -q -d keycloak -U postgres
            timeout: 45s
            interval: 10s
            retries: 5
        environment:
            POSTGRES_DBS: 'mally,keycloak'
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        env_file:
            - .env
        networks:
            - private
        volumes:
            - postgres:/var/lib/postgresql/data

    keycloak:
        image: ghcr.io/neumanf/mally-keycloak
        restart: unless-stopped
        healthcheck:
            test: curl -f http://0.0.0.0:9000/health/ready
            timeout: 20s
            interval: 5s
            retries: 15
        environment:
            JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://postgres/keycloak
            KC_DB_USERNAME: ${POSTGRES_USER}
            KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
            KC_HEALTH_ENABLED: 'true'
            KC_HTTP_ENABLED: 'true'
            KC_METRICS_ENABLED: 'true'
            KC_HOSTNAME_STRICT_HTTPS: 'false'
            KC_HOSTNAME_URL: ${KEYCLOAK_URL}
            KC_PROXY: edge
            KC_PROXY_HEADERS: xforwarded
            KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - public
            - private
        command: start --hostname ${KEYCLOAK_URL} --import-realm

    api:
        image: ghcr.io/neumanf/mally-api
        restart: unless-stopped
        healthcheck:
            test: curl -f http://0.0.0.0:8080/health
            timeout: 20s
            interval: 5s
            retries: 15
        environment:
            DATABASE_URL: ${POSTGRES_URL}
            DATABASE_USERNAME: ${POSTGRES_USER}
            DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
            KEYCLOAK_ISSUER_URL: ${KEYCLOAK_ISSUER_URL}
            FRONTEND_URL: ${FRONTEND_URL}
        env_file:
            -  .env
        networks:
            - public
            - private
#        extra_hosts:
#            - "auth.localhost:nginx"
        depends_on:
            postgres:
                condition: service_healthy
            keycloak:
                condition: service_healthy

    ui:
        image: ghcr.io/neumanf/mally-ui
        healthcheck:
            test: curl -f http://localhost || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        restart: unless-stopped
        networks:
            - public
            - private
        depends_on:
            api:
                condition: service_healthy
            keycloak:
                condition: service_healthy

    nginx:
        image: ghcr.io/neumanf/mally-nginx
        healthcheck:
            test: curl -f http://localhost || exit 1
            timeout: 20s
            interval: 5s
            retries: 15
        restart: unless-stopped
        env_file:
            - .env
        networks:
            - public
        depends_on:
            - api
            - ui
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - letsencrypt:/etc/letsencrypt
            - ./local_ca/:/etc/local_ca

    loki:
        image: ghcr.io/neumanf/mally-loki
        healthcheck:
            test: wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        restart: unless-stopped
        command: -config.file=/etc/loki/loki.yml
        networks:
            - private

    node-exporter:
        container_name: mally-node-exporter
        image: bitnami/node-exporter:1.8.2
        healthcheck:
            test: curl -f http://localhost:9100/metrics || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        restart: unless-stopped
        networks:
            - private

    prometheus:
        image: ghcr.io/neumanf/mally-prometheus
        healthcheck:
            test: wget --no-verbose --tries=1 --spider http://localhost:9090 || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        restart: unless-stopped
        command: '--config.file=/etc/prometheus/config.yml'
        networks:
            - private

    grafana:
        image: ghcr.io/neumanf/mally-grafana
        healthcheck:
            test: curl -f http://localhost:3000/
            timeout: 45s
            interval: 10s
            retries: 15
        restart: unless-stopped
        environment:
            GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
            GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
        env_file:
            - .env
        volumes:
            - grafana:/var/lib/grafana
        networks:
            - public
            - private

volumes:
    postgres:
    grafana:
    letsencrypt:

networks:
    public:
    private:
        driver: bridge
        ipam:
            config:
                - subnet: "10.0.0.0/19"
                  gateway: "10.0.0.1"
