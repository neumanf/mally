version: '3.7'

services:
    postgres:
        image: ghcr.io/neumanf/mally-postgres
        healthcheck:
            test: pg_isready -q -d keycloak -U postgres
            timeout: 45s
            interval: 10s
            retries: 5
        environment:
            POSTGRES_DBS: 'mally,keycloak'
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        env_file:
            - .env
        networks:
            - mally-network
        volumes:
            - postgres:/var/lib/postgresql/data

    keycloak:
        image: ghcr.io/neumanf/mally-keycloak
        healthcheck:
            test: curl -f http://localhost:9000/health/ready
            timeout: 45s
            interval: 10s
            retries: 15
        environment:
            JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://postgres/keycloak
            KC_DB_USERNAME: ${POSTGRES_USER}
            KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
            KC_HEALTH_ENABLED: 'true'
            KC_HTTP_ENABLED: 'true'
            KC_METRICS_ENABLED: 'true'
            KC_HOSTNAME_STRICT_HTTPS: 'false'
            KC_HOSTNAME_URL: ${KEYCLOAK_URL}
            KC_PROXY: edge
            KC_PROXY_HEADERS: xforwarded
            KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
        env_file:
            - .env
        networks:
            - mally-network
        command: start --hostname ${KEYCLOAK_URL} --import-realm

    api:
        image: ghcr.io/neumanf/mally-api
        healthcheck:
            test: curl -f http://localhost:8080/health/
            timeout: 45s
            interval: 3s
            retries: 15
        environment:
            DATABASE_URL: ${POSTGRES_URL}
            DATABASE_USERNAME: ${POSTGRES_USER}
            DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
            KEYCLOAK_ISSUER_URL: ${KEYCLOAK_ISSUER_URL}
            FRONTEND_URL: ${FRONTEND_URL}
        env_file:
            - .env
        volumes:
            - ./logs/api:/app/logs/api
        networks:
            - mally-network
        deploy:
            mode: replicated
            replicas: 2
            update_config:
                order: start-first
                failure_action: rollback
                delay: 5s
            placement:
                constraints:
                    - node.role == manager

    ui:
        image: ghcr.io/neumanf/mally-ui
        healthcheck:
            test: curl -f http://localhost || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        networks:
            - mally-network
        deploy:
            mode: replicated
            replicas: 2
            update_config:
                order: start-first
                failure_action: rollback
                delay: 5s

    nginx:
        image: ghcr.io/neumanf/mally-nginx
        healthcheck:
            test: curl -f http://localhost || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        networks:
            - mally-network
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./certbot/www/:/var/www/certbot/:rw
            - ./certbot/conf/:/etc/letsencrypt/:rw
        deploy:
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 15
            placement:
                constraints:
                    - node.role == manager

    loki:
        image: ghcr.io/neumanf/mally-loki
        healthcheck:
            test: wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        command: -config.file=/etc/loki/loki.yml
        networks:
            - mally-network

    promtail:
        image: ghcr.io/neumanf/mally-promtail
        healthcheck:
            test: wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        volumes:
            - ./logs/api/:/var/log/
        command: -config.file=/etc/promtail/promtail.yml
        networks:
            - mally-network

    prometheus:
        image: ghcr.io/neumanf/mally-prometheus
        healthcheck:
            test: wget --no-verbose --tries=1 --spider http://localhost:9090 || exit 1
            timeout: 45s
            interval: 10s
            retries: 15
        command: '--config.file=/etc/prometheus/config.yml'
        networks:
            - mally-network

    grafana:
        image: ghcr.io/neumanf/mally-grafana
        healthcheck:
            test: curl -f http://localhost:3000/
            timeout: 45s
            interval: 10s
            retries: 15
        environment:
            GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
            GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
        env_file:
            - .env
        volumes:
            - grafana:/var/lib/grafana
        networks:
            - mally-network

volumes:
    postgres:
    grafana:

networks:
    mally-network:
        name: mally-network
